apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: nodejs-builder
  labels:
    "pipelines.openshift.io/used-by": "build-cloud"
    "pipelines.openshift.io/runtime": "nodejs"
    "pipelines.openshift.io/strategy": "s2i"
spec:
  params:
    - description: 'Source Repository URL'
      name: git-url
      type: string
    - description: 'Revision of the Source Repository'
      name: revision
      type: string
      default: ""
    - description: 'Fully Qualified Output Image'
      name: output-image
      type: string
    - description: The path to your source code
      name: path-context
      type: string
      default: .
    - description: Path to the Dockerfile
      name: dockerfile
      type: string
      default: Dockerfile
    - description: Force rebuild image
      name: rebuild
      type: string
      default: "false"
  tasks:
    - name: appstudio-init
      params:
        - name: image-url
          value: "$(params.output-image)"
        - name: rebuild
          value: "$(params.rebuild)"
      taskRef:
        name: init
    - name: clone-repository
      when:
      - input: $(tasks.appstudio-init.results.build)
        operator: in
        values: ["true"]
      runAfter:
        - appstudio-init
      params:
        - name: url
          value: $(params.git-url)
        - name: revision
          value: "$(params.revision)"
      taskRef:
        name: git-clone
      workspaces:
        - name: output
          workspace: workspace
        - name: basic-auth
          workspace: git-auth
    - name: appstudio-configure-build
      runAfter:
        - clone-repository
      when:
      - input: $(tasks.appstudio-init.results.build)
        operator: in
        values: ["true"]
      taskRef:
        name: configure-build
      workspaces:
        - name: source
          workspace: workspace
        - name: registry-auth
          workspace: registry-auth
    - name: build-container
      when:
      - input: $(tasks.appstudio-init.results.build)
        operator: in
        values: ["true"]
      params:
        - name: PATH_CONTEXT
          value: $(params.path-context)
        - name: IMAGE
          value: "$(params.output-image)"
        - name: PUSH_EXTRA_ARGS
          value: "$(tasks.appstudio-configure-build.results.buildah-auth-param)"
      runAfter:
        - appstudio-configure-build
      taskRef:
        name: s2i-nodejs
      workspaces:
        - name: source
          workspace: workspace
  finally:
    - name: show-summary
      taskRef:
        name: summary
      params:
      - name: pipeline-run-name
        value: "$(context.pipelineRun.name)"
      - name: git-url
        value: "$(params.git-url)"
      - name: image-url
        value: $(params.output-image)
  results:
    - name: IMAGE_URL
      value: "$(tasks.build-container.results.IMAGE_URL)"
    - name: IMAGE_DIGEST
      value: "$(tasks.build-container.results.IMAGE_DIGEST)"
    - name: CHAINS-GIT_URL
      value: "$(tasks.clone-repository.results.url)"
    - name: CHAINS-GIT_COMMIT
      value: "$(tasks.clone-repository.results.commit)"
  workspaces:
    - name: workspace
    - name: registry-auth
      optional: true
    - name: git-auth
      optional: true
